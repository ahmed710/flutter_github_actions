name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Release new APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      # Step to decode the SERVICE_ACCOUNT_JSON secret and save it to a file
      - name: Prepare Google Application Credentials
        run: echo "${{ secrets.SERVICE_ACCOUNT_JSON }}" | base64 --decode > google-application-credentials.json

      # Debugging step to print the content of the decoded Google service account JSON file
      - name: Print Google Service Account JSON
        run: cat google-application-credentials.json

      - name: Find APK
        run: find ${{ github.workspace }} -type f -name '*.apk'

      # Step to verify the existence of the APK file
      - name: Verify releaseFiles
        run: |
          if [ -f "${{ github.workspace }}/build/app/outputs/flutter-apk/app-release.apk" ]; then
            echo "APK file exists."
          else
            echo "APK file does not exist."
            exit 1
          fi

      # Step to deploy to Google Play Console
      - name: Deploy to Google Play Console
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJson: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.example.flutter_github_actions
          releaseFiles: ${{ github.workspace }}/build/app/outputs/flutter-apk/app-release.apk
          track: internal

      # Step to remove the temporary credentials file
      - name: Remove credentials file
        if: always()
        run: |
          rm google-application-credentials.json
